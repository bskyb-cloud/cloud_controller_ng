### Create a droplet

```
Example Request
```

```shell
curl "https://api.example.org/v3/packages/[guid]/droplets" \
  -X POST \
  -H "Authorization: bearer [token]" \
  -H "Content-type: application/json" \
  -d '{
    "environment_variables": {
      "CUSTOM_ENV_VAR": "hello"
    },
    "lifecycle": {
      "type": "buildpack",
      "data": {
        "buildpacks": ["http://github.example.org/myorg/awesome-buildpack"],
        "stack": "cflinuxfs2"
      }
    }
  }'
```

```
Example Response
```

```http
HTTP/1.1 201 Created
Content-Type: application/json

<%= yield_content :single_staging_buildpack_droplet %>
```

#### Definition
`POST /v3/packages/:guid/droplets`

#### Optional Parameters

Name | Type | Description | Default
---- | ---- | ----------- | -------
**environment_variables** | _object_ | Environment variables to use during staging. Environment variable names may not start with `VCAP_` or `CF_`. `PORT` is not a valid environment variable. | `{}`
**staging_memory_in_mb** | _integer_ | Memory limit used to stage package. | operator-configured `minimum_staging_memory_mb`
**staging_disk_in_mb** | _integer_ | Disk limit used to stage package. | operator-configured `minimum_staging_disk_mb`
**lifecycle** | [_lifecycle object_](#the-lifecycle-object) | Lifecycle information for a droplet. | lifecycle on the app

#### Permitted Roles
 |
--- | ---
Space Developer |
Admin |